# -*- coding: utf-8 -*-
"""Lab1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C45sSS3He09RdQUOMdkV9VPqOd-nQveZ
"""

import numpy as np

class Perceptron:
    def __init__(self, input_size, learning_rate=0.1, epochs=100):
        self.weights = np.random.rand(input_size)
        self.bias = np.random.rand()
        self.learning_rate = learning_rate
        self.epochs = epochs

    def activate(self, x):
        return 1 if x >= 0 else 0

    def train(self, X, y):
        for _ in range(self.epochs):
            for i in range(len(X)):
                predicted = self.activate(np.dot(X[i], self.weights) + self.bias)
                error = y[i] - predicted
                self.weights += self.learning_rate * error * X[i]
                self.bias += self.learning_rate * error

    def predict(self, X):
        results = []
        for i in range(len(X)):
            predicted = self.activate(np.dot(X[i], self.weights) + self.bias)
            results.append(predicted)
        return results

# Example for AND gate
X_and = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_and = np.array([0, 0, 0, 1])

and_perceptron = Perceptron(input_size=2)
and_perceptron.train(X_and, y_and)

print("AND Gate Predictions:")
print(and_perceptron.predict(X_and))

# Example for OR gate
X_or = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_or = np.array([0, 1, 1, 1])

or_perceptron = Perceptron(input_size=2)
or_perceptron.train(X_or, y_or)

print("\nOR Gate Predictions:")
print(or_perceptron.predict(X_or))

# Example for NAND gate
X_nand = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_nand = np.array([1, 1, 1, 0])

nand_perceptron = Perceptron(input_size=2)
nand_perceptron.train(X_nand, y_nand)

print("\nNAND Gate Predictions:")
print(nand_perceptron.predict(X_nand))

# Example for NOR gate
X_nor = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_nor = np.array([1, 0, 0, 0])

nor_perceptron = Perceptron(input_size=2)
nor_perceptron.train(X_nor, y_nor)

print("\nNOR Gate Predictions:")
print(nor_perceptron.predict(X_nor))

# Example for XOR gate
X_xor = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_xor = np.array([0, 1, 1, 0])

xor_perceptron = Perceptron(input_size=2)
xor_perceptron.train(X_xor, y_xor)

print("\nXOR Gate Predictions:")
print(xor_perceptron.predict(X_xor))

# Example for NOT gate
X_not = np.array([[0], [1]])
y_not = np.array([1,0])

not_perceptron = Perceptron(input_size=1)
not_perceptron.train(X_not, y_not)

print("\nNOT Gate Predictions:")
print(not_perceptron.predict(X_not))

